name: 'atime-versions'
description: 'Use atime_versions() to compare performance between versions'
author: 'Jane He'
inputs:
  alpha:
    description: 'The significance threshold to report performance changes, used in Welch Two Sample t-test'
    default: '"1e-3"'
    required: false
  
runs:
  using: "composite"
  steps:
    - name: check-out
      uses: actions/checkout@v1
      with:
        fetch-depth: 0

    # The checkout action only fetch the repo, without creating local branches. 
    # Switch is needed for git2r::revparse_single to function
    # Only needed for pull requests
    - name: git-switch
      if: env.GITHUB_BASE_REF
      run: |
        git switch "${GITHUB_BASE_REF}"
        git switch "${GITHUB_HEAD_REF}"
      shell: bash

    - name: setup
      uses: r-lib/actions/setup-r@v2
      with:
        use-public-rspm: true

    - name: setup-dependency
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: any::rcmdcheck, any::devtools, any::ggplot2, any::directlabels
        needs: check
      
    - name: atime pkg
      id: atime-pkg
      env:
        _R_CHECK_CRAN_INCOMING_: false
        INPUT_ALPHA: ${{ inputs.alpha }}
      run: |
        ## --------------------------------------------------------------------
        devtools::install_github("tdhock/atime@compare-dt-tidy")
        src_dir <- Sys.getenv("GITHUB_WORKSPACE")

        options(repos="http://cloud.r-project.org")
        result.list <- atime::atime_pkg(src_dir)

        vec <- paste0(unlist(result.list), collapse = "\n")
        cat(vec)

        # apply t.test to each of the expression
        detect_perf_change <- function(expr, alpha=1e-3){
          vec <- paste0(unlist(expr), collapse = "\n")
          cat(vec)
          measure <- expr$measurements
          vec <- paste0(unlist(measure), collapse = "\n")
          cat(vec)
          head_perf <- measure[startsWith(measure$expr.name, "HEAD"), mean]
          if (Sys.getenv("GITHUB_BASE_REF") == "") {
            # If this is a commit, HEAD is compared with CRAN
            cran_perf <- measure[startsWith(measure$expr.name, "CRAN"), mean]
            test_result  <- t.test(head_perf, cran_perf, paired = FALSE)
            cat("HEAD is compared with CRAN")
          }else{
            # If this is a pull request, HEAD is compared with base
            base_perf <- measure[startsWith(measure$expr.name, "base"), mean]
            test_result  <- t.test(head_perf, base_perf, paired = FALSE)
            cat("HEAD is compared with base")
          }
          
          
          if (test_result$p.value < alpha & test_result$estimate[[1]] < test_result$estimate[[2]]){
            return('Significant performance improvement')
          }else if (test_result$p.value < alpha & test_result$estimate[[1]] > test_result$estimate[[2]]){
            return('Significant performance regression')
          }
          return(NULL)
        }

        alpha <- eval(expr = parse(text = Sys.getenv("INPUT_ALPHA")))
        sig_detection <- lapply(result.list, detect_perf_change, alpha)
        sig_detection <- Filter(Negate(is.null), sig_detection)
        if(length(sig_detection) > 0){
          f <- file.path(src_dir, "inst","atime","test_result.txt")
          write("Significant performance changes detected in the following test(s):", file = f)
          write.table(as.data.frame(unlist(sig_detection)), file = f, col.names = FALSE, append = TRUE ,quote = FALSE, sep = ": ")
          cat(sprintf("ATIME_CHANGES_DETECTED=True\n"), file = Sys.getenv("GITHUB_ENV"), append = TRUE)
        }

        cat("base.ref\n")
        cat(Sys.getenv("GITHUB_BASE_REF"),  "\n")

        cat("head.ref\n")
        cat(Sys.getenv("GITHUB_HEAD_REF"),  "\n")

        cat("git2r repository head name")
        repo <- git2r::repository(src_dir)
        cat(git2r::repository_head(src_dir)$name)

        cat("message of master\n")
        cat(git2r::revparse_single(src_dir, "master")$message, "\n")
        cat("message of another-branch\n")
        cat(git2r::revparse_single(src_dir, "another-branch")$message, "\n")

        
      shell: Rscript {0}

    - name: upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: atime-results
        path: inst/atime/

    - name: PR comment with file
      if: env.ATIME_CHANGES_DETECTED
      uses: thollander/actions-comment-pull-request@v2
      with:
        filePath: inst/atime/test_result.txt



